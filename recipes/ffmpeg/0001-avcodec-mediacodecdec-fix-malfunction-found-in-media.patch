From d2ce092474840842df5c03587e8202ab3334e785 Mon Sep 17 00:00:00 2001
From: Yonghua Zheng <yh.zheng@yuneec.com>
Date: Wed, 9 Oct 2019 11:49:23 +0800
Subject: [PATCH] avcodec/mediacodecdec: fix malfunction found in mediacodec
 hardware decode

Following commit breaks the hardware decode on Android
System, which causes avcode_send_packet or similar function to
return EAGAIN error due to failure in dequeuing input/output
buffer. Root cause unclear, for now disable the codes.

 commit f6681feda641c026d84f6d207f661bf9b87d9d70
 Author: Aman Gupta <aman@tmm1.net>
 Date:   Tue Apr 24 12:40:38 2018 -0700

 avcodec/mediacodecdec: restructure mediacodec_receive_frame

 The new logic follows a recommendation by @rcombs to use
 dequeueInputBuffer with a timeout of 0 as a way to detect
 whether the codec wants more data. The dequeued buffer index is
 kept in MediaCodecDecContext until it can be used next.

 A similar technique is also used by the Google's official media
 player Exoplayer: see MediaCodecRenderer.feedInputBuffer().
---
 libavcodec/mediacodecdec.c | 30 +++++++++++++++++++++++++++++-
 1 file changed, 29 insertions(+), 1 deletion(-)

diff --git a/libavcodec/mediacodecdec.c b/libavcodec/mediacodecdec.c
index 3a4240a..0488937 100644
--- a/libavcodec/mediacodecdec.c
+++ b/libavcodec/mediacodecdec.c
@@ -424,6 +424,32 @@ static int mediacodec_receive_frame(AVCodecContext *avctx, AVFrame *frame)
 
     /* feed decoder */
     while (1) {
+#if 0
+        /* HOTFIX: Following commit breaks the hardware decode on Android
+         * System, which causes avcode_send_packet or similar function to
+         * return EAGAIN error due to failure in dequeuing input/output
+         * buffer. Root cause unclear, for now disable the codes.
+         *
+         *  commit f6681feda641c026d84f6d207f661bf9b87d9d70
+         *  Author: Aman Gupta <aman@tmm1.net>
+         *  Date:   Tue Apr 24 12:40:38 2018 -0700
+         *
+         *  avcodec/mediacodecdec: restructure mediacodec_receive_frame
+         *
+         *  The new logic follows a recommendation by @rcombs to use
+         *  dequeueInputBuffer with a timeout of 0 as a way to detect
+         *  whether the codec wants more data. The dequeued buffer index is
+         *  kept in MediaCodecDecContext until it can be used next.
+         *
+         *  A similar technique is also used by the Google's official media
+         *  player Exoplayer: see MediaCodecRenderer.feedInputBuffer().
+         *
+         *  Signed-off-by: Aman Gupta <aman@tmm1.net>
+         *  Signed-off-by: Matthieu Bouron <matthieu.bouron@gmail.com>
+         *
+         * By disabling the codes below, mediacodec decode can work
+         */
+
         if (s->ctx->current_input_buffer < 0) {
             /* poll for input space */
             index = ff_AMediaCodec_dequeueInputBuffer(s->ctx->codec, 0);
@@ -433,10 +459,12 @@ static int mediacodec_receive_frame(AVCodecContext *avctx, AVFrame *frame)
             }
             s->ctx->current_input_buffer = index;
         }
+#endif
 
         /* try to flush any buffered packet data */
         if (s->buffered_pkt.size > 0) {
-            ret = ff_mediacodec_dec_send(avctx, s->ctx, &s->buffered_pkt, false);
+            ret = ff_mediacodec_dec_send(avctx, s->ctx, &s->buffered_pkt, true);
+
             if (ret >= 0) {
                 s->buffered_pkt.size -= ret;
                 s->buffered_pkt.data += ret;
-- 
2.20.1

